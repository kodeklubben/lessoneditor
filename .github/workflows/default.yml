name: Build, push, and deploy

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Test and Build Apps
    timeout-minutes: 3
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "18"

      - run: npm ci

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: npm-deps-${{ hashFiles('package-lock.json') }}

      - run: npm run test-all

      - run: npm run build-all

      - name: Cache Dist Folder
        uses: actions/cache@v3
        with:
          path: ./dist
          key: cache-dist-${{ github.sha }}

  deploy_db:
    permissions:
      contents: "read"
      id-token: "write"
    timeout-minutes: 9
    needs: test
    name: Deploy to Cloud SQL Postgres
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - run: 'echo "$SSH_KEY" > credentials.json'
        env:
          SSH_KEY: ${{ secrets.SERVICE_ACCOUNT }}

      - run: npm ci
      - run: npm run build-backend

      - name: Install Cloud SQL Auth Proxy
        run: wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy && chmod +x cloud_sql_proxy

      - name: Start Cloud SQL Proxy
        run: |
          ./cloud_sql_proxy -instances=erik-lessoneditor:europe-north1:lesson-editor=tcp:5432 -credential_file=credentials.json &
          PROXY_PID=$!
          sleep 10
          npm run typeorm migration:run
          kill $PROXY_PID
        env:
          POSTGRES_CONNECTION: postgres
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: pai_kjelke_bever
          POSTGRES_DB: lesson-editor
          POSTGRES_PORT: 5432
          POSTGRES_SYNCHRONIZE: false
          POSTGRES_MIGRATIONS: dist/db/migrations/**/*.js
          POSTGRES_ENTITIES: dist/apps/backend/src/**/*.entity.js

  deploy:
    permissions:
      contents: "read"
      id-token: "write"
    timeout-minutes: 9
    needs: test
    if: github.ref == 'refs/heads/main'
    name: Deploy to Google App Engine
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Restoring Dist Folder
        uses: actions/cache@v3
        with:
          path: ./dist
          key: cache-dist-${{ github.sha }}
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.SERVICE_ACCOUNT }}"

      - id: "deploy"
        uses: "google-github-actions/deploy-appengine@v1"
        with:
          build_env_vars: |
            POSTGRES_PASSWORD=pai_kjelke_bever
            GITHUB_CLIENT_SECRET=4300bdc8a4f79bec5488874eae1c676056332dff
            GITHUB_CLIENT_ID=29df9fe87b3b11799c63
            GITHUB_CALLBACK_URL=https://erik-lessoneditor.nw.r.appspot.com/api/auth/callback
            THUMB_SERVICE_URL=https://europe-west1-erik-lessoneditor.cloudfunctions.net/thumbnailer
          env_vars: |
            POSTGRES_PASSWORD=pai_kjelke_bever
            GITHUB_CLIENT_SECRET=4300bdc8a4f79bec5488874eae1c676056332dff
            GITHUB_CLIENT_ID=29df9fe87b3b11799c63
            GITHUB_CALLBACK_URL=https://erik-lessoneditor.nw.r.appspot.com/api/auth/callback
            THUMB_SERVICE_URL=https://europe-west1-erik-lessoneditor.cloudfunctions.net/thumbnailer
          project_id: "erik-lessoneditor"

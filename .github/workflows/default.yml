name: Build, push, and deploy

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Test and Build Apps
    timeout-minutes: 3
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: "18"
      - run: npm install
      - run: npm run test-all
      - run: npm run test-backend
      - run: npm run build-all
      - run: npm run build-backend
      - name: Caching Dist Folder
        uses: actions/cache@v2
        with:
          path: ./dist
          key: cache-dist-${{ github.sha }}

  deploy_db:
    name: Deploy to Cloud SQL Postgres
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    timeout-minutes: 5
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install Dependencies
        run: npm ci

      - name: Install Cloud SQL Auth Proxy
        run: |
          wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
          chmod +x cloud_sql_proxy

      - name: Setup Google Cloud SDK
        uses: actions-hub/gcloud@master # Use specific version or commit hash
        env:
          PROJECT_ID: erik-lessoneditor
          APPLICATION_CREDENTIALS: ${{ secrets.SERVICE_ACCOUNT }}
        with:
          args: info

      - name: Decode and Set Up Service Account
        run: |
          echo ${{ secrets.SERVICE_ACCOUNT }} | base64 --decode > credentials.json
          chmod 600 credentials.json

      - name: Authenticate with gcloud
        run: gcloud auth activate-service-account gae-deploy@erik-lessoneditor.iam.gserviceaccount.com --key-file=credentials.json

      - name: Get and Store Access Token
        run: |
          ACCESS_TOKEN=$(gcloud auth print-access-token)
          echo "ACCESS_TOKEN=${ACCESS_TOKEN}" >> $GITHUB_ENV

      - name: Run Migrations
        run: (./cloud_sql_proxy -instances=erik-lessoneditor:europe-west1:lesson-editor=tcp:5432 -credential_file=credentials.json & sleep 2) && typeorm -d dist/apps/backend/db/data-sources.js -- migration:run
        env:
          TYPEORM_CONNECTION: postgres
          TYPEORM_HOST: localhost
          TYPEORM_USERNAME: gae-deploy@erik-lessoneditor.iam
          TYPEORM_PASSWORD: ${{ env.ACCESS_TOKEN }}
          TYPEORM_DATABASE: erik-lessoneditor
          TYPEORM_PORT: 5432
          TYPEORM_SYNCHRONIZE: false
          TYPEORM_MIGRATIONS: db/migration/**/*.ts
          TYPEORM_MIGRATIONS_DIR: db/migration
          TYPEORM_ENTITIES: apps/backend/src/user/user.entity.ts,apps/backend/src/lesson/lesson.entity.ts,apps/backend/src/session/session.entity.ts

  deploy:
    timeout-minutes: 9
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    name: Deploy to Google App Engine
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Restoring Dist Folder
        uses: actions/cache@v2
        with:
          path: ./dist
          key: cache-dist-${{ github.sha }}
      - id: "auth"
        uses: "google-github-actions/auth@v0.4.1"
        with:
          credentials_json: "${{ secrets.SERVICE_ACCOUNT }}"
      - name: deploy
        uses: google-github-actions/deploy-appengine@v1
        with:
          project_id: "erik-lessoneditor"

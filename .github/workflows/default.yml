name: Build, push, and deploy

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - main

jobs:
  # test:
  #   name: Run Test and Build Apps
  #   timeout-minutes: 3
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: "18"

  #     - run: npm ci

  #     - name: Cache Node Modules
  #       uses: actions/cache@v3
  #       with:
  #         path: node_modules
  #         key: npm-deps-${{ hashFiles('package-lock.json') }}

  #     - run: npm run test-all

  #     - run: npm run build-all

  #     - name: Cache Dist Folder
  #       uses: actions/cache@v3
  #       with:
  #         path: ./dist
  #         key: cache-dist-${{ github.sha }}

  deploy_db:
    name: Deploy to Cloud SQL Postgres
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - run: 'echo "$SSH_KEY" > credentials.json'
        env:
          SSH_KEY: ${{ secrets.SERVICE_ACCOUNT }}

      - run: npm ci
      - run: npm run build-backend

      - name: Install PostgreSQL client
        run: sudo apt-get install -y postgresql-client

      - name: Install Cloud SQL Auth Proxy
        run: wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy && chmod +x cloud_sql_proxy

      - name: Create PostgreSQL database if not exists
        run: |
          PGPASSWORD=$TYPEORM_PASSWORD psql -h $TYPEORM_HOST -U $TYPEORM_USERNAME -p $TYPEORM_PORT -t -c "SELECT 1 FROM pg_database WHERE datname='$TYPEORM_DATABASE'" | grep -q 1 || PGPASSWORD=$TYPEORM_PASSWORD psql -h $TYPEORM_HOST -U $TYPEORM_USERNAME -p $TYPEORM_PORT -c "CREATE DATABASE $TYPEORM_DATABASE"
        env:
          TYPEORM_HOST: 127.0.0.1
          TYPEORM_PORT: 5432
          TYPEORM_USERNAME: postgres
          TYPEORM_PASSWORD: pai_kjelke_bever
          TYPEORM_DATABASE: lesson-editor

      - name: Start Cloud SQL Proxy
        run: |
          ./cloud_sql_proxy -instances=erik-lessoneditor:europe-north1:lesson-editor=tcp:5432 -credential_file=credentials.json &
          PROXY_PID=$!
          sleep 10
          npm run typeorm migration:run
          kill $PROXY_PID
        env:
          TYPEORM_CONNECTION: postgres
          TYPEORM_HOST: 127.0.0.1
          TYPEORM_USERNAME: postgres
          TYPEORM_PASSWORD: pai_kjelke_bever
          TYPEORM_DATABASE: lesson-editor
          TYPEORM_PORT: 5432
          TYPEORM_SYNCHRONIZE: false
          TYPEORM_MIGRATIONS: db/migrations/**/*.ts
          TYPEORM_MIGRATIONS_DIR: db/migrations
          TYPEORM_ENTITIES: apps/backend/src/**/*..entity.ts

  # deploy:
  #   permissions:
  #     contents: "read"
  #     id-token: "write"
  #   timeout-minutes: 9
  #   needs: test
  #   if: github.ref == 'refs/heads/main'
  #   name: Deploy to Google App Engine
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3
  #     - name: Restoring Dist Folder
  #       uses: actions/cache@v3
  #       with:
  #         path: ./dist
  #         key: cache-dist-${{ github.sha }}

  #     - id: "auth"
  #       name: "Authenticate to Google Cloud"
  #       uses: "google-github-actions/auth@v1"
  #       with:
  #         credentials_json: "${{ secrets.SERVICE_ACCOUNT }}"

  #     - id: "deploy"
  #       uses: "google-github-actions/deploy-appengine@v1"
  #       with:
  #         project_id: "erik-lessoneditor"

name: Build, push, and deploy

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run Test and Build Apps
    timeout-minutes: 3
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm ci --ignore-scripts --no-optional --prefer-offline --no-audit
      - name: Caching Nx
        uses: actions/cache@v2
        with:
          path: node_modules/.cache
          key: cache-nx-${{ hashFiles('package-lock.json') }}-${{ github.sha }}
          restore-keys: |
            cache-nx-${{ hashFiles('package-lock.json') }}-
            cache-nx-
      - run: npm run test-all
      - run: npm run test-nestbackend
      - run: npm run build-all
      - run: npm run build-nestbackend
      - run: npm r
      - name: Caching Dist Folder
        uses: actions/cache@v2
        with:
          path: ./dist
          key: cache-dist-${{ github.sha }}

  deploy_db:
    name: Deploy migrations to Google Cloud PostgresSQL
    needs: test 
    steps:
      - uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: test
          APPLICATION_CREDENTIALS: ${{ secrets.SERVICE_ACCOUNT }}
        with:
          args: info
      - name: fetch access token
        run: echo ${{ secrets.SERVICE_ACCOUNT }} > credentials.json
      - run: gcloud auth activate-service-account github-actions@lessoneditor.iam.gserviceaccount.com --key-file=credentials.json
      - run: echo "{ACCESS_TOKEN}={gcloud auth print-access-token}" >> $GITHUB_ENV
      - name: run migrations
        run: node ./node_modules/typeorm/cli.js --config ormconfig.migration.js migration:run
        env:
          TYPEORM_CONNECTION: postgres
          TYPEORM_HOST: 35.228.106.158 
          TYPEORM_USERNAME: postgres
          TYPEORM_PASSWORD: ${{ env.ACCESS_TOKEN }}
          TYPEORM_DATABASE: lessoneditor
          TYPEORM_PORT: 5432
          TYPEORM_SYNCHRONIZE: false
          TYPEORM_ENTITIES: dist/**/*entity.js
      

  deploy:
    name: Deploy to Google App Engine
    timeout-minutes: 3
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Restoring Dist Folder
        uses: actions/cache@v2
        with:
          path: ./dist
          key: cache-dist-${{ github.sha }}
      - run: echo "${{ secrets.DOTENV }}" > .env
      #- run: mv dist/apps/backend/package.json package.json
      - name: Deploy to Google App Engine
        uses: atRobertoFlores/gae_deploy_action@master
        with:
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
          project_name: lessoneditor
